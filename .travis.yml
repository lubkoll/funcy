os: linux
dist: focal
language: python
python: "3.7"

addons:
  apt:
    packages:
    - g++-10
    - gcc-10
    - ruby2.7
    - libopenblas-dev
    - liblapack-dev
    - lcov
  
matrix:
  include:
    # LINUX
    # GCC 10
    - os: linux
      env: COMPILER=g++-10 COMPUTE_COVERAGE=true
      compiler: gcc
      
     
install:
  - pip install conan
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi

    
  ############################################################################
  # Install lcov
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${COMPUTE_COVERAGE}" == "true" ]]; then
      sudo gem install coveralls-lcov
    fi

  ############################################################################
  # Install cmake
  ############################################################################
  - |
    sudo apt purge cmake
    cd $DEPS
    wget http://github.com/Kitware/CMake/releases/download/v3.13.1/cmake-3.13.1.tar.gz
    tar xzf cmake-3.13.1.tar.gz && cd cmake-3.13.1
    ./bootstrap && make && sudo make install
  
  ############################################################################
  # Install Eigen
  ############################################################################
  - cd $DEPS
  - git clone https://github.com/eigenteam/eigen-git-mirror.git
  - cd eigen-git-mirror && mkdir build && cd build && cmake .. && sudo make install


script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build
  - conan install .. --profile ../conanprofile.txt --build gtest
  - cmake -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake ..
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      cmake .. -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-coverage"
    else
      cmake .. -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake
    fi
  - cmake --build .
  - cd test && ctest


after_success:
  ############################################################################
  # Upload coverage information to coveralls.io
  ############################################################################
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      lcov --gcov-tool gcov-10 --capture --no-external --directory . --base-directory ../include -rc lcov_branch_coverage=1 --output-file coverage.info
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
    fi

