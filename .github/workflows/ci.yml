name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        compiler_version: [10]
        include:
          - build_type: Debug
            cc: gcc-10
            cxx: g++-10
            gcov: gcov-10
            compiler: gcc
            compiler_version: 10
            cxx_flags: -coverage
          - build_type: Release
            cc: clang-10
            cxx: clang++-10
            compiler: clang
            compiler_version: 10

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - uses: srt32/git-actions@v0.0.3

    - name: Set ENV variables
      run: |
        echo "COMPILER=${{matrix.compiler}}" >> $GITHUB_ENV
        echo "COMPILER_VERSION=${{matrix.compiler_version}}" >> $GITHUB_ENV
        echo "CXX=${{matrix.cxx}}" >> $GITHUB_ENV
        echo "CC=${{matrix.cc}}" >> $GITHUB_ENV
        echo "GCOV=${{matrix.gcov}}" >> $GITHUB_ENV
        echo "BUILD_TYPE=${{matrix.build_type}}" >> $GITHUB_ENV
        echo "COVERALLS_TOKEN=${{secrets.COVERALLS_TOKEN}}" >> $GITHUB_ENV
        echo "FLAGS=${{matrix.cxx_flags}}" >> $GITHUB_ENV

    - name: Print ENV vars
      run: |
        echo "COMPILER: ${COMPILER}"
        echo "COMPILER_VERSION: ${COMPILER_VERSION}"
        echo "CXX: ${CXX}"
        echo "CC: ${CC}"
        echo "GCOV: ${GCOV}"
        echo "BUILD_TYPE: ${BUILD_TYPE}"
        echo "docker version: $(docker --version)"

    - name: Test
      run: docker run --rm -v ${PWD}:/src lubkoll/funcy /bin/bash /src/scripts/run_tests.sh $COMPILER $COMPILER_VERSION $BUILD_TYPE $FLAGS $COVERALLS_TOKEN
      if: ${{matrix.compiler == 'gcc'}}

    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install -y libeigen3-dev clang-10 clang++-10 ruby2.5 lcov
        pip install conan
        conan profile new default --detect
        conan profile update settings.compiler=$COMPILER default
        conan profile update settings.compiler.version=$COMPILER_VERSION default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.build_type=Release default
        sudo gem install coveralls-lcov
      if: ${{matrix.compiler == 'clang'}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
      if: ${{matrix.compiler == 'clang'}}

    - name: Install Dependencies
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: conan install $GITHUB_WORKSPACE --build=missing
      if: ${{matrix.compiler == 'clang'}}

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake
      if: ${{matrix.compiler == 'clang'}}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      if: ${{matrix.compiler == 'clang'}}

    - name: Test
      working-directory: ${{runner.workspace}}/build/test
      shell: bash
      run: ctest -C $BUILD_TYPE
      if: ${{matrix.compiler == 'clang'}}

