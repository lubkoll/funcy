name: CMake

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        include:
          - build_type: Release
            cc: gcc-10
            cxx: g++-10
            gcov: gcov-10
            compiler: gcc
            compiler_version: 10
          - build_type: Release
            cc: clang-10
            cxx: clang++-10
            compiler: clang
            compiler_version: 10

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Set ENV variables
      run: |
        echo "::set-env name=COMPILER::${{matrix.compiler}}"
        echo "::set-env name=COMPILER_VERSION::${{matrix.compiler_version}}"
        echo "::set-env name=CXX::${{matrix.cxx}}"
        echo "::set-env name=CC::${{matrix.cc}}" 
        echo "::set-env name=BUILD_TYPE::${{matrix.build_type}}" 

    - name: Print Travis ENV vars 
      run: |
        echo "COMPILER: ${COMPILER}"
        echo "COMPILER_VERSION: ${COMPILER_VERSION}"
        echo "CXX: ${CXX}"
        echo "CC: ${CC}"
        echo "BUILD_TYPE: ${BUILD_TYPE}"

    - name: Install Eigen
      run: |
        sudo apt-get update
        sudo apt-get install -y libeigen3-dev

    - name: Setup
      run: |
        pip install conan
        conan profile new default --detect
        conan profile update settings.compiler=$COMPILER default
        conan profile update settings.compiler.version=$COMPILER_VERSION default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.build_type=$BUILD_TYPE default

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install Dependencies
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: conan install $GITHUB_WORKSPACE --build missing

    - name: Configure
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash

      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build/test
      shell: bash
      run: ctest -C $BUILD_TYPE
