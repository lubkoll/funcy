name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
#    name: ${ { matrix.config.name } }
    runs-on: ${ { matrix.os } }
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest,
            build_type: "Release"
            cc: "gcc-10"
            cxx: "g++-10"
            gcov: "gcov-10"
            compiler: "gcc"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Setup
      run: |
        pip install conan
        conan profile new default --detect
        conan profile update settings.compiler=${ { matrix.compiler } } default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.build_type=$BUILD_TYPE default
      env:
        CXX: ${ { matrix.cc } }
        CC: ${ { matrix.cxx } }

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install Dependencies
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: conan install $GITHUB_WORKSPACE --build missing
      env:
        CXX: ${ { matrix.cc } }
        CC: ${ { matrix.cxx } }

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DFuncy_BuildTest=ON -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake
      env:
        CXX: ${ { matrix.cc } }
        CC: ${ { matrix.cxx } }

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
      env:
        CXX: ${ { matrix.cc } }
        CC: ${ { matrix.cxx } }

    - name: Test
      working-directory: ${{runner.workspace}}/build/test
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
